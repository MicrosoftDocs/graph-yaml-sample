### YamlMime:GraphOperation
uid: graph.list_get
metadata:
  title: Get a SharePoint list
  author: rgregg
  ms.author: rgregg
  ms.date: 09/11/2017
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/api/list_get.md
summary:
  heading: "Get metadata for a list"
  intro: |
    Returns the metadata for a [list][].
permissions:
  heading: "Permissions"
  intro: |
    One of the following permissions is required to call this API. To learn more, including how to choose permissions, see [Permissions](xref:graph.permissions_reference).
  list:
  - resource: "Delegated (work or school account)"
    permission: "Sites.Read.All, Sites.ReadWrite.All"
  - resource: "Delegated (personal Microsoft account)"
    permission: "Not supported."
  - resource: "Application"
    permission: "Sites.Read.All, Sites.ReadWrite.All"
section:
  heading: "HTTP request"
  intro: |
    GET https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}
    GET https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}?expand=columns,items(expand=fields)

requestBody:
  heading: "Request body"
  intro: |
    Do not supply a request body with this method.
examples:
- items:
  - request:
      heading: "Request"
      sampleCode: |
        ```http
        GET /sites/{site-id}/lists/{list-id}
        ```
        
    response:
      heading: "Response"
      sampleCode: |
        ```json
        HTTP/1.1 200 OK
        Content-type: application/json
        
        {
          "id": "1234-112-112-4",
          "name": "MicroFeed",
          "createdDateTime": "2016-08-30T08:32:00Z",
          "lastModifiedDateTime": "2016-08-30T08:32:00Z",
          "list": {
            "hidden": false,
            "template": "genericList"
            }
        }
        ```
        
      outro: |
        With `select` and `expand` statements, you can retrieve list metadata, column definitions, and list items in a single request.
  - request:
      heading: "request"
      sampleCode: |
        ```http
        GET /sites/{site-id}/lists/{list-id}?select=id,name,lastModifiedDateTime&expand=columns(select=name,description),items(expand=fields(select=Name,Color,Quantity))
        ```
        
    response:
      heading: "Response"
      sampleCode: |
        ```json
        HTTP/1.1 200 OK
        Content-type: application/json
        
        {
          "id": "1234-112-112-4",
          "name": "Inventory",
          "lastModifiedDateTime": "2016-08-30T08:32:00Z",
          "columns": [
            {
              "name": "Name",
              "description": "Customer-facing name of the SKU"
            },
            {
              "name": "Color",
              "description": "Color of the item in stock"
            },
            {
              "name": "Quantity",
              "description": "Number of items in stock"
            }
          ],
          "items": [
            {
              "id": "2",
              "fields": {
                "Name": "Gadget",
                "Color": "Red",
                "Quantity": 503
               }
            },
            {
              "id": "4",
              "fields": {
                "Name": "Widget",
                "Color": "Blue",
                "Quantity": 2357
               }
            },
            {
              "id": "7",
              "fields": {
                "Name": "Gizmo",
                "Color": "Green",
                "Quantity": 92
               }
            }
          ]
        }
        ```
        
