### YamlMime:GraphOperation
uid: graph.drive_get
metadata:
  title: Get Drive
  author: rgregg
  ms.author: rgregg
  ms.date: 09/10/2017
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/api/drive_get.md
summary:
  heading: "Get Drive"
  intro: |
    Retrieve the properties and relationships of a [Drive](xref:graph.drive) resource.
    A Drive is the top-level container for a file system, such as OneDrive or SharePoint document libraries.
permissions:
  heading: "Permissions"
  intro: |
    One of the following permissions is required to call this API. To learn more, including how to choose permissions, see [Permissions](../../../concepts/permissions_reference.md).
  list:
  - resource: "Delegated (work or school account)"
    permission: "Files.Read, Files.ReadWrite, Files.Read.All, Files.ReadWrite.All, Sites.Read.All, Sites.ReadWrite.All"
  - resource: "Delegated (personal Microsoft account)"
    permission: "Files.Read, Files.ReadWrite, Files.Read.All, Files.ReadWrite.All"
  - resource: "Application"
    permission: "Files.Read.All, Files.ReadWrite.All, Sites.Read.All, Sites.ReadWrite.All"
  outro: |
    ## Get current user's OneDrive
    The signed in user's drive (when using delegated authentication) can be accessed from the `me` singleton.
    If a user's OneDrive is not provisioned but the user has a license to use OneDrive, this request will automatically provision the user's drive, when using delegated authentication.
httpRequest:
  heading: "HTTP request"
  samples:
  - sampleCode: |
      ```http
      GET /me/drive
      ```
      
  outro: |
    ## Get a user's OneDrive
    To access a user's OneDrive or OneDrive for Business, your app must request the **drive** relationship on the User resource.
    If a user's OneDrive is not provisioned but the user has a license to use OneDrive, this request will automatically provision the user's drive, when using delegated authentication.
    
    ```http
    GET /users/{idOrUserPrincipalName}/drive
    ```
    
queryParameters:
  heading: "Optional query parameters"
  intro: |
    These method support the [$select query parameter][odata-query-parameters] to shape the response.
  outro: |
    ## HTTP response
    Each of these methods returns a [Drive resource][drive-resource] for the matching drive in the response body.
    
    ```http
    HTTP/1.1 200 OK
    Content-type: application/json
    
    {
        "id": "b!t18F8ybsHUq1z3LTz8xvZqP8zaSWjkFNhsME-Fepo75dTf9vQKfeRblBZjoSQrd7",
        "driveType": "business",
        "owner": {
            "user": {
                "id": "efee1b77-fb3b-4f65-99d6-274c11914d12",
                "displayName": "Ryan Gregg"
            }
        },
        "quota": {
            "deleted": 256938,
            "remaining": 1099447353539,
            "state": "normal",
            "total": 1099511627776
        }
    }
    ```
    
    
    ```http
    HTTP/1.1 200 OK
    Content-type: application/json
    
    {
        "id": "b!t18F8ybsHUq1z3LTz8xvZqP8zaSWjkFNhsME-Fepo75dTf9vQKfeRblBZjoSQrd7",
        "driveType": "business",
        "owner": {
            "user": {
                "id": "efee1b77-fb3b-4f65-99d6-274c11914d12",
                "displayName": "Ryan Gregg"
            }
        },
        "quota": {
            "deleted": 256938,
            "remaining": 1099447353539,
            "state": "normal",
            "total": 1099511627776
        }
    }
    ```
    
    
    ```http
    HTTP/1.1 200 OK
    Content-type: application/json
    
    {
        "id": "b!t18F8ybsHUq1z3LTz8xvZqP8zaSWjkFNhsME-Fepo75dTf9vQKfeRblBZjoSQrd7",
        "driveType": "business",
        "owner": {
            "user": {
                "id": "efee1b77-fb3b-4f65-99d6-274c11914d12",
                "displayName": "Ryan Gregg"
            }
        },
        "quota": {
            "deleted": 256938,
            "remaining": 1099447353539,
            "state": "normal",
            "total": 1099511627776
        }
    }
    ```
    
    
    ```http
    HTTP/1.1 200 OK
    Content-type: application/json
    
    {
        "id": "b!t18F8ybsHUq1z3LTz8xvZqP8zaSWjkFNhsME-Fepo75dTf9vQKfeRblBZjoSQrd7",
        "driveType": "business",
        "owner": {
            "user": {
                "id": "efee1b77-fb3b-4f65-99d6-274c11914d12",
                "displayName": "Ryan Gregg"
            }
        },
        "quota": {
            "deleted": 256938,
            "remaining": 1099447353539,
            "state": "normal",
            "total": 1099511627776
        }
    }
    ```
    
parameters:
  heading: "Path parameters"
  list:
  - name: "idOrUserPrincipalName"
    value: "String"
    description: "Required. The identifier for the user object who owns the OneDrive."
  outro: |
    ## Get the document library associated with a group
    To access a Group's default document library, your app requests the **drive** relationship on the Group.
    
    ```http
    GET /groups/{groupId}/drive
    ```
    
    |Parameter name|Value|Description
    |:-|:-|:-|
    |_groupId_|string|Required. The identifier for the group which owns the document library.
