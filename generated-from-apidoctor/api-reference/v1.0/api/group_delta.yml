### YamlMime:GraphOperation
uid: graph.group_delta
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/api/group_delta.md
summary:
  heading: "group: delta"
  intro: |
    [Delta query](xref:graph.delta_query_overview) enables applications to discover newly created, updated, or deleted entities without performing a full read of the target resource with every request. To discover changes to groups, perform a request using the *delta* function. See [Using Delta Query](xref:graph.delta_query_overview) for details.
permissions:
  heading: "Permissions"
  intro: |
    One of the following permissions is required to call this API. To learn more, including how to choose permissions, see [Permissions](xref:graph.permissions_reference).
  list:
  - resource: "Delegated (work or school account)"
    permission: "Group.Read.All, Group.ReadWrite.All"
  - resource: "Delegated (personal Microsoft account)"
    permission: "Not supported."
  - resource: "Application"
    permission: "Group.Read.All, Group.ReadWrite.All"
section:
  heading: "HTTP request"
  intro: |
    To begin tracking changes, you make a request including the delta function on the groups resource.
  samples:
  - sampleCode: |
      ```http
      GET /groups/delta
      ```
      
queryParameters:
  heading: "Query parameters"
  intro: |
    Tracking changes in groups incurs a round of one or more **delta** function calls. If you use any query parameter (other than `$deltatoken` and `$skiptoken`), you must specify it in the initial **delta** request. Microsoft Graph automatically encodes any specified parameters into the token portion of the `nextLink` or `deltaLink` URL provided in the response.
    You only need to specify any desired query parameters once upfront.
    In subsequent requests, copy and apply the `nextLink` or `deltaLink` URL from the previous response, as that URL already includes the encoded, desired parameters.
  list:
  - name: "$deltatoken"
    value: "String"
    description: "A state token returned in the deltaLink URL of the previous delta function call for the same group collection, indicating the completion of that round of change tracking. Save and apply the entire deltaLink URL including this token in the first request of the next round of change tracking for that collection."
  - name: "$skiptoken"
    value: "String"
    description: "A state token returned in the nextLink URL of the previous delta function call, indicating there are further changes to be tracked in the same group collection."
  outro: |
    ### OData query parameters
    This method supports optional OData query parameters to help customize the response.
    
    * You can use a `$select` query parameter as in any GET request to specify only the properties your need for best performance. The
    _id_ property is always returned.
    * Delta query support `$select`, `$top`, and `$expand` for groups.
    * There is limited support for `$filter` and `$orderby`:
        * The only supported `$filter` expression is for tracking changes on a specific object: `$filter=id+eq+{value}`. You can filter multiple objects. For example, `https://graph.microsoft.com/v1.0/groups/delta/?$filter= id eq '477e9fc6-5de7-4406-bb2a-7e5c83c9ffff' or id eq '004d6a07-fe70-4b92-add5-e6e37b8affff`. There is a limit of 50 filtered objects.
    * There is no support for `$search`.
    
requestHeaders:
  heading: "Request headers"
  list:
  - name: "Authorization"
    value: ""
    description: "Bearer token"
  - name: "Content-Type"
    value: ""
    description: "application/json"
requestBody:
  heading: "Request body"
  intro: |
    Do not supply a request body for this method.
response:
  heading: "Response"
  intro: |
    If successful, this method returns `200 OK` response code and [group](xref:graph.group) collection object in the response body. The response also includes a state token which is either a nextLink URL or a deltaLink URL.
    
    * If a nextLink URL is returned, there are additional pages of data to be retrieved in the session. The application continues making requests using the nextLink URL until a deltaLink URL is included in the response.
    * If a deltaLink URL is returned, there is no more data about the existing state of the resource to be returned. For future requests, the application uses the deltaLink URL to learn about changes to the resource.
    
    See:</br>
    - [Using Delta Query](xref:graph.delta_query_overview) for more details.</br>
    - [Get incremental changes for groups](xref:graph.delta_query_groups) for a more detailed walkthrough.</br>
