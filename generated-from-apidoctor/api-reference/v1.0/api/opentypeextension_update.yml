### YamlMime:GraphOperation
uid: graph.opentypeextension_update
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/api/opentypeextension_update.md
summary:
  heading: "Update open extension"
  intro: |
    Update an open extension ([openTypeExtension](xref:graph.openTypeExtension) object) with the properties in the request body:
    
    * If a property in the request body matches the name of an existing property in the extension, the data in the 
    extension is updated.
    * Otherwise that property and its data are added to the extension. 
    
    The data in an extension can be primitive types, or arrays of primitive types.
permissions:
  heading: "Permissions"
  intro: |
    One of the following permissions is required to call this API, depending on the resource that the extension was created in. To learn more, including how to choose permissions, see [Permissions](xref:graph.permissions_reference).
  list:
  - resource: ""
    permission: ""
  - resource: ""
    permission: ""
  - resource: ""
    permission: ""
  - resource: ""
    permission: ""
  - resource: ""
    permission: ""
httpRequest:
  heading: "HTTP request"
  intro: |
    In the request, identify the resource instance, use the **extensions** 
    navigation property of that instance to identify the extension, and do a `PATCH` on that extension instance.
  sampleCode: |
    ```http
    PATCH /devices/{Id}/extensions/{extensionId}
    PATCH /users/{id|userPrincipalName}/events/{id}/extensions/{extensionId}
    PATCH /groups/{id}/extensions/{extensionId}
    PATCH /groups/{id}/events/{id}/extensions/{extensionId}
    PATCH /groups/{id}/threads/{id}/posts/{id}/extensions/{extensionId}
    PATCH /users/{id|userPrincipalName}/messages/{id}/extensions/{extensionId}
    PATCH /organization/{Id}/extensions/{extensionId}
    PATCH /users/{id|userPrincipalName}/contacts/{id}/extensions/{extensionId}
    PATCH /users/{id|userPrincipalName}/extensions/{extensionId}
    ```
    
  outro: |
    See the [Request body](#request-body) section about including in the request body any custom data to change or add to that extension.
parameters:
  heading: "Path parameters"
  list:
  - name: "id"
    value: "String"
    description: "A unique identifier for an instance of the corresponding collection. Required."
  - name: "extensionId"
    value: "String"
    description: "This can be an extension name which is a unique text identifier for an extension, or a fully qualified name which concatenates the extension type and unique text identifier. The fully qualified name is returned in the id property when you create the extension. Required."
requestHeaders:
  heading: "Request headers"
  list:
  - name: "Authorization"
    value: "String"
    description: ""
  - name: "Content-Type"
    value: "String"
    description: ""
requestBody:
  heading: "Request body"
  intro: |
    Provide a JSON body of an [openTypeExtension](xref:graph.openTypeExtension) object, with the 
    following required name-value pairs, and any custom data to change or add to that extension. 
    The data in the JSON payload can be primitive types, or arrays of primitive types.
    |Name|Value
    |:-|:-|
    |@odata.type|microsoft.graph.openTypeExtension
    |extensionName|%unique_string%
response:
  heading: "Response"
  intro: |
    If successful, this method returns a `200 OK` response code and the updated
    [openTypeExtension](xref:graph.openTypeExtension) object.
examples:
  - items:
    - Example:
        heading: "Example"
        outro: |
          #### Request 1
          The first example shows how to update an extension in a message. The extension is initially represented by the following JSON payload:
          
          ```http
          {
              "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#Me/messages('AAMkAGE1M2IyNGNmLTI5MTktNDUyZi1iOTVl===')/extensions/$entity",
              "@odata.type": "#microsoft.graph.openTypeExtension",
              "@odata.id": "https://graph.microsoft.com/v1.0/users('ddfc984d-b826-40d7-b48b-57002df85e00@1717f226-49d1-4d0c-9d74-709fad6677b4')/messages('AAMkAGE1M2IyNGNmLTI5MTktNDUyZi1iOTVl===')/extensions
          ('Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral')",
              "extensionName": "Com.Contoso.Referral",
              "id": "Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral",
              "companyName": "Wingtip Toys",
              "dealValue": 500050,
              "expirationDate": "2015-12-03T10:00:00Z"
          }
          ```
          
          You can reference the extension by its name:
          
          ```http
          PATCH https://graph.microsoft.com/v1.0/me/messages/AAMkAGE1M2IyNGNmLTI5MTktNDUyZi1iOTVl===/extensions/Com.Contoso.Referral
          ```
          
          Or you can reference the extension by its fully qualified name:
          
          ```http
          PATCH https://graph.microsoft.com/v1.0/me/messages/AAMkAGE1M2IyNGNmLTI5MTktNDUyZi1iOTVl===/extensions/Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral
          ```
          
          You can use either example request and the following request body to update the above extension by:
          - Changing `companyName` from `Wingtip Toys` to `Wingtip Toys (USA)`
          - Changing `dealValue` from `500050` to `500100`
          - Adding new data as the custom property `updated`
          
          ```http
          {
              "@odata.type": "microsoft.graph.openTypeExtension",
              "extensionName": "Com.Contoso.Referral",
              "companyName": "Wingtip Toys (USA)",
              "dealValue": "500100",
              "expirationDate": "2015-12-03T10:00:00.000Z",
              "updated": "2015-10-29T11:00:00.000Z"
          }
          ```
          
