### YamlMime:GraphOperation
uid:graph.subscription_post_subscriptions
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/api/subscription_post_subscriptions.md
summary:
  heading: Create subscription
  intro: |
    Subscribes a listener application to receive notifications when data on the Microsoft Graph changes.
permissions:
  heading: Permissions
  intro: |
    Creating a subscription requires read scope to the resource. For example, to get notifications messages, your app needs the `Mail.Read` permission. The following table lists the suggested permission needed for each resource. To learn more, including how to choose permissions, see [Permissions](xref:graph.permissions_reference).
  list:
  - resource: 
    permission: 
  - resource: 
    permission: 
  - resource: 
    permission: 
  - resource: 
    permission: 
  - resource: 
    permission: 
  - resource: 
    permission: 
  - resource: 
    permission: 
  - resource: 
    permission: 
httpRequest:
  heading: HTTP request
  sampleCode: |
    ```http
    POST /subscriptions
    ```
    
requestHeaders:
  heading: Request headers
  list:
  - name: Authorization
    value: String
    description: Bearer {token}. Required.
response:
  heading: Response
  intro: |
    If successful, this method returns `201 Created` response code and a [subscription](xref:graph.subscription) object in the response body.
examples:
  - items:
    - Example:
        heading: Example
        request:
            heading: Request
            intro: |
              Here is an example of the request to send a notification when the user receives a new mail.
            sampleCode: |
              ```http
              POST https://graph.microsoft.com/v1.0/subscriptions
              Content-type: application/json
              
              {
                 "changeType": "created,updated",
                 "notificationUrl": "https://webhook.azurewebsites.net/api/send/myNotifyClient",
                 "resource": "me/mailFolders('Inbox')/messages",
                 "expirationDateTime":"2016-11-20T18:23:45.9356913Z",
                 "clientState": "secretClientValue"
              }
              ```
              
            outro: |
              In the request body, supply a JSON representation of the [subscription](xref:graph.subscription) object.
              The `clientState` field is optional.
              ##### Resources examples
              The following are valid values for the resource property of the subscription:
              |Resource type|Examples
              |:------ -|:----- -|
              |Mail|me/mailfolders('inbox')/messages<br />me/messages
              |Contacts|me/contacts
              |Calendars|me/events
              |Users|users
              |Groups|groups
              |Conversations|groups('*{id}*')/conversations
              |Drives|me/drive/root
    - Response:
        heading: Response
        intro: |
          Here is an example of the response. Note: The response object shown here may be truncated for brevity. All of the properties will be returned from an actual call.
        request:
            heading: request
            sampleCode: |
              ```http
              HTTP/1.1 201 Created
              Content-type: application/json
              Content-length: 252
              
              {
                "@odata.context": "https://graph.microsoft.com/beta/$metadata#subscriptions/$entity",
                "id": "7f105c7d-2dc5-4530-97cd-4e7ae6534c07",
                "resource": "me/mailFolders('Inbox')/messages",
                "applicationId": "24d3b144-21ae-4080-943f-7067b395b913",
                "changeType": "created,updated",
                "clientState": "secretClientValue",
                "notificationUrl": "https://webhook.azurewebsites.net/api/send/myNotifyClient",
                "expirationDateTime": "2016-11-20T18:23:45.9356913Z",
                "creatorId": "8ee44408-0679-472c-bc2a-692812af3437"
              }
              ```
              
        outro: |
          ## Notification endpoint validation
          The subscription notification endpoint (specified in the `notificationUrl` property) must be capable of responding to a validation request as described in [Set up notifications for changes in user data](../../../concepts/webhooks.md#notification-endpoint-validation). If validation fails, the request to create the subscription returns a 400 Bad Request error.
