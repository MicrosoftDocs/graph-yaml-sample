### YamlMime:GraphOperation
uid: graph.event_get
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/api/event_get.md
summary:
  heading: "Get event"
  intro: |
    Get the properties and relationships of the specified [event](xref:graph.event) object.
    Currently, this operation returns event bodies in only HTML format.
    Since the **event** resource supports [extensions](../../../concepts/extensibility_overview.md), you can also use the `GET` operation to get custom properties and extension data in an **event** instance.
  outro: |
    ### Get events in another user's calendar
    If you have application permissions, or if you have the appropriate delegated [permissions](#permissions) from one user, it's possible to get events 
    from another user's calendar. This section focuses on scenarios that involve delegated permissions.
    For example, your app has acquired delegated permissions from the user, John. Suppose another user, Garth, has shared a calendar with John. 
    You can get an event in that shared calendar by specifying Garth’s user ID (or user principal name) in the example query shown below.
    
    ```http
    GET /users/{Garth-id | Garth-userPrincipalName}/events/{id}
    ```
    
    This capability applies to all the supported GET events operations for an individual user, as listed in the [HTTP request](#http-request) section below . 
    It also applies if Garth has delegated his entire mailbox to John.
    If Garth has not shared his calendar with John, nor has he delegated his mailbox to John, specifying Garth’s user ID or user principal name in those GET operations 
    will return an error. In such cases, specifying a user ID or user principal name only works for getting an event in the signed-in user’s own calendars, 
    and the query is equivalent to using the /me shortcut:
    
    ```http
    GET /me/events/{id}
    ```
    
    This capability is available in only GET operations of:
    
    * Shared contact folders, calendars, and message folders 
    * Contacts, events, and messages in shared folders
    * The above resources in delegated mailboxes
    
    This capability is not available in other operations for contacts, events, messages, and their folders.
permissions:
  heading: "Permissions"
  intro: |
    One of the following permissions is required to call this API. To learn more, including how to choose permissions, see [Permissions](../../../concepts/permissions_reference.md).
  list:
  - resource: "Delegated (work or school account)"
    permission: "Calendars.Read"
  - resource: "Delegated (personal Microsoft account)"
    permission: "Calendars.Read"
  - resource: "Application"
    permission: "Calendars.Read"
httpRequest:
  heading: "HTTP request"
  samples:
  - sampleCode: |
      ```http
      GET /me/events/{id}
      GET /users/{id | userPrincipalName}/events/{id}
      GET /groups/{id}/events/{id}
      
      GET /me/calendar/events/{id}
      GET /users/{id | userPrincipalName}/calendar/events/{id}
      GET /groups/{id}/calendar/events/{id}
      
      GET /me/calendars/{id}/events/{id}
      GET /users/{id | userPrincipalName}/calendars/{id}/events/{id}
      
      GET /me/calendargroup/calendars/{id}/events/{id}
      GET /users/{id | userPrincipalName}/calendargroup/calendars/{id}/events/{id}
      
      GET /me/calendargroups/{id}/calendars/{id}/events/{id}
      GET /users/{id | userPrincipalName}/calendargroups/{id}/calendars/{id}/events/{id}
      ```
      
queryParameters:
  heading: "Optional query parameters"
  intro: |
    This method supports the [OData Query Parameters](http://developer.microsoft.com/en-us/graph/docs/overview/query_parameters) to help customize the response.
requestHeaders:
  heading: "Request headers"
  list:
  - name: "Authorization"
    value: "String"
    description: "Bearer {token}. Required."
  - name: "Prefer: outlook.timezone"
    value: "String"
    description: "Use this to specify the time zone for start and end times in the response. If not specified, those time values are returned in UTC. Optional."
  - name: "Prefer: outlook.body-content-type"
    value: "String"
    description: "The format of the body property to be returned in. Values can be \"text\" or \"html\". A Preference-Applied header is returned as confirmation if this Prefer header is specified. If the header is not specified, the body property is returned in HTML format. Optional."
requestBody:
  heading: "Request body"
  intro: |
    Do not supply a request body for this method.
response:
  heading: "Response"
  intro: |
    If successful, this method returns a `200 OK` response code and [event](xref:graph.event) object in the response body.
examples:
  - items:
    - request:
      heading: "Request 1"
      intro: |
        The first example gets the specified event. It specifies the following:
        
        * A `Prefer: outlook.timezone` header to get date time values returned in Pacific Standard Time. 
        * A `$select` query parameter to return specific properties. Without a `$select` parameter, all of the event properties will be returned.
        
      sampleCode: |
        ```http
        GET https://graph.microsoft.com/v1.0/me/events/AAMkAGIAAAoZDOFAAA=?$select=subject,body,bodyPreview,organizer,attendees,start,end,location 
        Prefer: outlook.timezone="Pacific Standard Time"
        ```
        
    - request:
      heading: "Response 1"
      intro: |
        Here is an example of the response. The **body** property is returned in the default format of HTML.
      response:
      heading: "Response 1"
      sampleCode: |
        ```http
        HTTP/1.1 200 OK
        Content-type: application/json
        Preference-Applied: outlook.timezone="Pacific Standard Time"
        Content-length: 1928
        
        {
            "@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users('cd209b0b-3f83-4c35-82d2-d88a61820480')/events(subject,body,bodyPreview,organizer,attendees,start,end,location)/$entity",
            "@odata.etag":"W/\"ZlnW4RIAV06KYYwlrfNZvQAAKGWwbw==\"",
            "id":"AAMkAGIAAAoZDOFAAA=",
            "subject":"Orientation ",
            "bodyPreview":"Dana, this is the time you selected for our orientation. Please bring the notes I sent you.",
            "body":{
                "contentType":"html",
                "content":"<html><head></head><body><p>Dana, this is the time you selected for our orientation. Please bring the notes I sent you.</p></body></html>"
            },
            "start":{
                "dateTime":"2017-04-21T10:00:00.0000000",
                "timeZone":"Pacific Standard Time"
            },
            "end":{
                "dateTime":"2017-04-21T12:00:00.0000000",
                "timeZone":"Pacific Standard Time"
            },
            "location": {
                "displayName": "Assembly Hall",
                "locationType": "default",
                "uniqueId": "Assembly Hall",
                "uniqueIdType": "private"
            },
            "locations": [
                {
                    "displayName": "Assembly Hall",
                    "locationType": "default",
                    "uniqueIdType": "unknown"
                }
            ],
            "attendees":[
                {
                    "type":"required",
                    "status":{
                        "response":"none",
                        "time":"0001-01-01T00:00:00Z"
                    },
                    "emailAddress":{
                        "name":"Samantha Booth",
                        "address":"samanthab@a830edad905084922E17020313.onmicrosoft.com"
                    }
                },
                {
                    "type":"required",
                    "status":{
                        "response":"none",
                        "time":"0001-01-01T00:00:00Z"
                    },
                    "emailAddress":{
                        "name":"Dana Swope",
                        "address":"danas@a830edad905084922E17020313.onmicrosoft.com"
                    }
                }
            ],
            "organizer":{
                "emailAddress":{
                    "name":"Samantha Booth",
                    "address":"samanthab@a830edad905084922E17020313.onmicrosoft.com"
                }
            }
        }
        ```
        
    - request:
      heading: "Request 2"
      intro: |
        The second example shows getting an event that specifies more than one location. The request specifies a `$select` query parameter 
        to return specific properties. 
      sampleCode: |
        ```http
        GET https://graph.microsoft.com/v1.0/me/events/AAMkADAGAADDdm4NAAA=?$select=subject,body,bodyPreview,organizer,attendees,start,end,location,locations
        ```
        
    - request:
      heading: "Response 2"
      intro: |
        Here is an example of the response. The **locations** property includes details for the 3 locations that the event is organized for. 
        Because the request does not specify any `Prefer: outlook.timezone` header, 
        the **start** and **end** properties are displayed in the default UTC time zone. 
        The event body is in the default HTML format.  
      response:
      heading: "Response 2"
      sampleCode: |
        ```http
        HTTP/1.1 200 OK
        Content-type: application/json
        Content-length: 1992
        
        {
          "@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users('d1a2fae9-db66-4cc9-8133-2184c77af1b8')/events(subject,body,bodyPreview,organizer,attendees,start,end,location,locations)/$entity",
          "@odata.etag":"W/\"y53lbKh6jkaxHzFwGhgyxgAAw5zhug==\"",
          "id":"AAMkADAGAADDdm4NAAA=",
          "subject":"Plan summer company picnic",
          "bodyPreview":"Let's kick-start this event planning!",
          "body":{
            "contentType":"html",
            "content":"<html>\r\n<head>\r\n</head>\r\n<body>\r\nLet's kick-start this event planning!\r\n</body>\r\n</html>\r\n"
          },
          "start":{
            "dateTime":"2017-08-30T11:00:00.0000000",
            "timeZone":"UTC"
          },
          "end":{
            "dateTime":"2017-08-30T12:00:00.0000000",
            "timeZone":"UTC"
          },
          "location":{
            "displayName":"Conf Room 3; Fourth Coffee; Home Office",
            "locationType":"default",
            "uniqueId":"Conf Room 3; Fourth Coffee; Home Office",
            "uniqueIdType":"private"
          },
          "locations":[
            {
              "displayName":"Conf Room 3",
              "locationType":"default",
              "uniqueIdType":"unknown"
            },
            {
              "displayName":"Fourth Coffee",
              "locationType":"default",
              "uniqueId":"Fourth Coffee",
              "uniqueIdType":"private",
              "address":{
                "street":"4567 Main St",
                "city":"Redmond",
                "state":"WA",
                "countryOrRegion":"US",
                "postalCode":"32008"
              },
              "coordinates":{
                "latitude":47.672,
                "longitude":-102.103
              }
            },
            {
              "displayName":"Home Office",
              "locationType":"default",
              "uniqueIdType":"unknown"
            }
          ],
          "attendees":[
            {
              "type":"required",
              "status":{
                "response":"none",
                "time":"0001-01-01T00:00:00Z"
              },
              "emailAddress":{
                "name":"Dana Swope",
                "address":"DanaS@contoso.onmicrosoft.com"
              }
            },
            {
              "type":"required",
              "status":{
                "response":"none",
                "time":"0001-01-01T00:00:00Z"
              },
              "emailAddress":{
                "name":"Alex Wilber",
                "address":"AlexW@contoso.onmicrosoft.com"
              }
            }
          ],
          "organizer":{
            "emailAddress":{
              "name":"Adele Vance",
              "address":"AdeleV@contoso.onmicrosoft.com"
            }
          }
        }
        ```
        
