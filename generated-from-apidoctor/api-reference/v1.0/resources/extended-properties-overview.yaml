### YamlMime:GraphOperation
source_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/resources/extended-properties-overview.md
top:
  heading: Outlook extended properties overview
  intro: |
    Extended properties allow storing custom data and specifically serve as a fallback mechanism for apps to access 
    custom data for Outlook MAPI properties when these properties are _not already exposed in the Microsoft Graph API metadata_. 
    You can use extended properties REST API to store or get such custom data in the following user resources:
    
    * [message](../resources/message.md)
    * [mailFolder](../resources/mailfolder.md)
    * [event](../resources/event.md)
    * [calendar](../resources/calendar.md)
    * [contact](../resources/contact.md)
    * [contactFolder](../resources/contactfolder.md) 
    
    Or, in the following Office 365 group resources:
    
    * group [event](../resources/event.md)
    * group [calendar](../resources/calendar.md)
    * group [post](../resources/post.md) 
    
  outro: |
    ## Use extended properties or open extensions?
    In most common scenarios, you should be able to use open extensions (represented by [openTypeExtension](../resources/opentypeextension.md), formerly known as 
    Office 365 data extensions) to store and access custom data for resource instances in a user's mailbox. Use extended properties only if you
    need to access custom data for Outlook MAPI properties that are not already exposed in the 
    [Microsoft Graph API metadata](http://developer.microsoft.com/en-us/graph/docs/overview/call_api). 
