### YamlMime:GraphResource
source_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/resources/opentypeextension.md
top:
  heading: openTypeExtension resource type (open extensions)
  intro: |
    Open extensions (formerly known as Office 365 data extensions) provide an easy way to directly add untyped properties to a resource in Microsoft Graph.
    Open extensions are represented by the **openTypeExtension** resource. Any open extension added to a resource shows up in the **extensions** navigation property, which is derived from the [extension](extension.md) abstract type. Each extension has an **extensionName** property which is the only pre-defined, writable property for all extensions, along with your custom data.
    One way to help make sure extension names are unique is to use a reverse domain name system (DNS) format that is dependent on _your own domain_, for example, `Com.Contoso.ContactInfo`. Do not use the Microsoft domain (`Com.Microsoft` or `Com.OnMicrosoft`) in an extension name.
    Open extension example: [Add custom data to users using open extensions](../../../concepts/extensibility_open_users.md)
    Open extensions are supported by the following resources in the corresponding versions - general availability (GA: /v1.0 and /beta) or preview (/beta).
    |Resource|Version
    |:-|:-|
    |[Administrative unit](../../beta/resources/administrativeunit.md)|Preview only
    |[Calendar event](event.md)|GA
    |Group [calendar event](event.md)|GA
    |Group conversation thread [post](post.md)|GA
    |[device](device.md)|GA
    |[group](group.md)|GA
    |[message](message.md)|GA
    |[organization](organization.md)|GA
    |[Personal contact](contact.md)|GA
    |[user](user.md)|GA
  outro: |
    ## Outlook-specific considerations
    Each open extension present on an Outlook resource (event, message, or personal contact) is stored in a [MAPI named property](https://msdn.microsoft.com/en-us/library/cc765864(v=office.15).aspx). When you create open extensions for Outlook, consider that MAPI named properties are a finite resource in a user's mailbox. When a user's named property quota is exhausted, you can't create any more named properties for that user. This can result in unexpected behavior from clients that rely on named properties to function.
    Apply the following guidelines when you create open extensions on Outlook resources:
    
    * Create the minimum number of extensions required. Most applications should require no more than one extension. Extensions have no set defined properties or structure, so you can store multiple values in a single extension.
    * Avoid naming extensions in a variable manner (such as based on user input, etc.). Each time an open extension is created with a new name that has not been used in a user's mailbox before, a new MAPI named property is created. Removing the extension does not remove the named property.
    
resource:
  heading: JSON representation
  intro: |
    Here is a JSON representation of the resource.
  resourceDefinition: |
    ```json
    {
      "extensionName": "string",
      "id": "string (identifier)"
    }
    ```
    
properties:
  heading: Properties
  table:
  - name: extensionName
    type: String
    description: A unique text identifier for an open type open extension. Required.
  - name: id
    type: String
    description: A fully qualified identifier that concatenates the extension type with the extensionName. Read-only.
relationships:
  heading: Relationships
  intro: |
    None
methods:
  heading: Methods
  intro: |
    |Method|Return Type|Description
    |:-|:-|:-|
    |[Post](../api/opentypeextension_post_opentypeextension.md)|[openTypeExtension](opentypeextension.md) (in an existing resource instance), or a new [contact](../resources/contact.md), [event](../resources/event.md), or [message](../resources/message.md) that contains an openTypeExtension object|Create an openTypeExtension object in an existing or new resource instance.
    |[Get](../api/opentypeextension_get.md)|[openTypeExtension](opentypeextension.md)|Read properties and relationships of openTypeExtension object.
    |[Update](../api/opentypeextension_update.md)|[openTypeExtension](opentypeextension.md)|Update openTypeExtension object.
    |[Delete](../api/opentypeextension_delete.md)|None|Delete openTypeExtension object.
