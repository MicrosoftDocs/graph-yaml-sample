### YamlMime:GraphOperation
uid:graph.mail_api_overview
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/api-reference/v1.0/resources/mail_api_overview.md
summary:
  heading: Use the Outlook mail REST API
  intro: |
    Microsoft Graph lets your app get authorized access to a user's Outlook mail data in a personal or organization account.
    With the [appropriate delegated or application permissions](xref:graph.permissions_reference), your app can access the mail data of
    the signed-in user or any user in a tenant. The mail data can be in the cloud on Exchange Online as part of Office 365, or on
    Exchange on-premises in a [hybrid deployment](xref:graph.hybrid_rest_support).
  outro: |
    ## Using the mail REST API
    Mail API requests are performed on behalf of a [user](xref:graph.user) which can be identified by the user's **id** property (a unique GUID), email address,
    or the `me` shortcut alias for the signed-in user.
    Email messages are represented by the [message](xref:graph.message) resource and organized in a [mailFolder](xref:graph.mailfolder).
    Messages and mail folders are identified by their **id** property, obtainable from `GET` operations.
    
    Message bodies can be in HTML or text format.
    You can use well-known folder names such as `Inbox`, `Drafts`, `SentItems`, or `DeletedItems` to identify certain mail folders that exist by default for all users. For a list of supported well-known folder names, see [mailFolder resource type](xref:graph.mailfolder).
    For example, you can get messages in the Outlook **Sent Items** folder of the signed-in user, without first getting the folder ID:
    GET /me/mailFolders('SentItems')/messages?$select=sender,subject

