### YamlMime:GraphOperation
uid: graph.webhooks
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/webhooks.md
summary:
  heading: "Set up notifications for changes in user data"
  intro: |
    The Microsoft Graph API uses a webhook mechanism to deliver notifications to clients. A client is a web service that configures its own URL to receive notifications. Client apps use notifications to update their state upon changes.
    After Microsoft Graph accepts the subscription request, it pushes notifications to the URL specified in the subscription. The app then takes action according to its business logic. For example, it fetches more data, updates its cache and views, etc.
  outro: |
    ## Supported resources
    Using the Microsoft Graph API, an app can subscribe to changes on the following resources:
    
    * Messages
    * Events
    * Contacts
    * Users
    * Groups
    * Group conversations
    * Content shared on OneDrive including drives associated with SharePoint sites
    * User's personal OneDrive folders
    
    For instance, you can create a subscription to a specific mail folder:
    `me/mailFolders('inbox')/messages`
    Or to a top-level resource:
    `me/messages`, `me/contacts`, `me/events`, `users`, or `groups`
    Or to a specific resource instance:
    `users/{id}`, `groups/{id}`, `groups/{id}/conversations`
    Or to a SharePoint/OneDrive for Business drive:
    `/drive/root`
    Or to a user's personal OneDrive:
    `/drives/{id}/root`
    `/drives/{id}/root/subfolder`
examples:
  - items:
    - request:
      heading: "Subscription request example"
      intro: |
        POST https://graph.microsoft.com/v1.0/subscriptions
        Content-Type: application/json
        {
          "changeType": "created,updated",
          "notificationUrl": "https://webhook.azurewebsites.net/notificationClient",
          "resource": "/me/mailfolders('inbox')/messages",
          "expirationDateTime": "2016-03-20T11:00:00.0000000Z",
          "clientState": "SecretClientState"
        }

        The `changeType`, `notificationUrl`, `resource`, and `expirationDateTime` properties are required. See [subscription resource type](xref:graph.subscription) for property definitions and values.
        Although `clientState` is not required, you must include it to comply with our recommended notification handling process. Setting this property will allow you to confirm that notifications you receive originate from the Microsoft Graph service. For this reason, the value of the property should remain secret and known only to your application and the Microsoft Graph service.
        If successful, Microsoft Graph returns a `201 Created` code and a [subscription](xref:graph.subscription) object in the body.
    - request:
      heading: "Subscription renewal example"
      intro: |
        PATCH https://graph.microsoft.com/v1.0/subscriptions/{id}
        Content-Type: application/json
        
        {
          "expirationDateTime": "2016-03-22T11:00:00.0000000Z"
        }

        If successful, Microsoft Graph returns a `200 OK` code and a [subscription](xref:graph.subscription) object in the body. The subscription object includes the new `expirationDateTime` value.
    - request:
      heading: "Notification example"
      intro: |
        When the user receives an email, Microsoft Graph sends a notification like the following:
        {
          "value": [
            {
              "subscriptionId":"<subscription_guid>",
              "subscriptionExpirationDateTime":"2016-03-19T22:11:09.952Z",
              "clientState":"secretClientValue",
              "changeType":"created",
              "resource":"users/{user_guid}@<tenant_guid>/messages/{long_id_string}",
              "resourceData":
              {
                "@odata.type":"#Microsoft.Graph.Message",
                "@odata.id":"Users/{user_guid}@<tenant_guid>/Messages/{long_id_string}",
                "@odata.etag":"W/\"CQAAABYAAADkrWGo7bouTKlsgTZMr9KwAAAUWRHf\"",
                "id":"<long_id_string>"
              }
            }
          ]
        }

        Note the `value` field is an array of objects. When there are many queued notifications, Microsoft Graph may send multiple items in a single request. Notifications from different subscriptions can be included in the same notification request.
