### YamlMime:GraphOperation
source_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/json_batching.md
top:
  heading: Combine multiple requests in one HTTP call using JSON batching
  intro: |
    JSON batching allows you to optimize your application by combining multiple requests into a single JSON object. For example, a client might want to compose a view of unrelated data such as:
    
    1. An image stored in OneDrive
    1. A list of Planner tasks
    1. The calendar for a group
    
    Combining these three individual requests into a single batch request can save the application significant network latency.
  outro: |
    ## First JSON batch request
    First you construct the JSON batch request for the previous example. In this scenario, the individual requests are not interdependent in any way and therefore can be placed into the batch request in any order.
    POST https://graph.microsoft.com/v1.0/$batch
    Accept: application/json
    Content-Type: application/json

    {
      "requests": [
        {
          "id": "1",
          "method": "GET",
          "url": "/me/drive/root:/{file}:/content"
        },
        {
          "id": "2",
          "method": "GET",
          "url": "/me/planner/tasks"
        },
        {
          "id": "3",
          "method": "GET",
          "url": "/groups/{id}/events"
        },
        {
          "id": "4",
          "url": "/me",
          "method": "PATCH",
          "body": {
            "city" : "Redmond"
          },
          "headers": {
            "Content-Type": "application/json"
          }
        }
      ]
    }

    Responses to the batched requests might appear in a different order. The `id` property can be used to correlate individual requests and responses.
    200 OK
    Content-Type: application/json

    {
      "responses": [
        {
          "id": "1",
          "status": 302,
          "headers": {
            "location": "https://b0mpua-by3301.files.1drv.com/y23vmagahszhxzlcvhasdhasghasodfi"
          }
        },
        {
          "id": "3",
          "status": 401,
          "body": {
            "error": {
              "code": "Forbidden",
              "message": "..."
            }
          }
        },
        {
          "id": "2",
          "status": 200,
          "body": {
            "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.plannerTask)",
            "value": []
          }
        },
        {
          "id": "4",
          "status": 204,
          "body": null
        }
      ]
    }

