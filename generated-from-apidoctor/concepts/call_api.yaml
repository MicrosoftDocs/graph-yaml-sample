### YamlMime:GraphOperation
source_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/call_api.md
top:
  heading: Calling the Microsoft Graph API
  intro: |
    To access and manipulate a Microsoft Graph resource, you call and specify the resource URLs using one of the following operations:   
    
    * GET
    * POST
    * PATCH
    * PUT
    * DELETE 
    
    All Microsoft Graph API requests use the following basic URL pattern:
    	https://graph.microsoft.com/{version}/{resource}?[query_parameters]

    For this URL:
    
    * `https://graph.microsoft.com` is the Microsoft Graph API endpoint.
    * `{version}` is the target service version, for example, `v1.0` or `beta`.
    * `{resource}` is resource segment or path, such as:
        * `users`, `groups`, `devices`, `organization`
        * The alias `me`, which resolves to the signed-in user
        * The resources belonging to a user, such as `me/events`, `me/drive` or `me/messages`
        * The alias `myOrganization`, which resolves to the tenant of the organization signed-in user
    * `[query_parameters]` represents additional query parameters such as `$filter` and `$select`.
    
    Optionally, you can also specify the tenant as part of your request.
    When using `me`, do not specify the tenant.
    For a list of common requests, see [Overview of Microsoft Graph](overview.md).
  outro: |
    ## Microsoft Graph API metadata
    The metadata document ($metadata) is published at the service root.
    For example, you can view the service document for the v1.0 and beta versions via the following URLs.
    Microsoft Graph API `v1.0` metadata.
    	https://graph.microsoft.com/v1.0/$metadata

    Microsoft Graph API `beta` metadata.
    	https://graph.microsoft.com/beta/$metadata

    The metadata allows you to see and understand the data model of Microsoft Graph, including the entity types and sets, complex types, and enums that make up the request and response packets sent to and from Microsoft Graph.
    You can use the metadata to understand the realtionships between entities in Microsoft Graph and establish URLs that navigate between entities.
    This navigation-based interconnectedness gives Microsoft Graph its unique character.
    Path URL resource names, query parameters, and action parameters and values are case insensitive. 
    However, values you assign, entity IDs, and other base64-encoded values are case-sensitive.
    The following sections show a few basic programming pattern calls to the Microsoft Graph API.
