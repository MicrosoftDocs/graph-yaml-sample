### YamlMime:GraphResource
uid: graph.errors
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/errors.md
summary:
  heading: Microsoft Graph error responses and resource types
  intro: |
    Errors in Microsoft Graph are returned using standard HTTP status codes, as well as a JSON error
    response object.
  outro: |
    ## HTTP status codes
    The following table lists and describes the HTTP status codes that can be returned.
    |Status code|Status message|Description
    |:-|:-|:-|
    |400|Bad Request|Cannot process the request because it is malformed or incorrect.
    |401|Unauthorized|Required authentication information is either missing or not valid for the resource.
    |403|Forbidden|Access is denied to the requested resource. The user might not have enough permission. <br /><br /> **Important:** If conditional access policies are applied to a resource, a HTTP 403; Forbidden error=insufficent_claims may be returned. For more details on Microsoft Graph and conditional access see [Developer Guidance for Azure Active Directory Conditional Access](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-conditional-access-developer)
    |404|Not Found|The requested resource doesn’t exist.
    |405|Method Not Allowed|The HTTP method in the request is not allowed on the resource.
    |406|Not Acceptable|This service doesn’t support the format requested in the Accept header.
    |409|Conflict|The current state conflicts with what the request expects. For example, the specified parent folder might not exist.
    |410|Gone|The requested resource is no longer available at the server.
    |411|Length Required|A Content-Length header is required on the request.
    |412|Precondition Failed|A precondition provided in the request (such as an if-match header) does not match the resource's current state.
    |413|Request Entity Too Large|The request size exceeds the maximum limit.
    |415|Unsupported Media Type|The content type of the request is a format that is not supported by the service.
    |416|Requested Range Not Satisfiable|The specified byte range is invalid or unavailable.
    |422|Unprocessable Entity|Cannot process the request because it is semantically incorrect.
    |429|Too Many Requests|Client application has been throttled and should not attempt to repeat the request until an amount of time has elapsed.
    |500|Internal Server Error|There was an internal server error while processing the request.
    |501|Not Implemented|The requested feature isn’t implemented.
    |503|Service Unavailable|The service is temporarily unavailable for maintenance or is overloaded. You may repeat the request after a delay, the length of which may be specified in a Retry-After header.
    |504|Gateway Timeout|The server, while acting as a proxy, did not receive a timely response from the upstream server it needed to access in attempting to complete the request. May occur together with 503.
    |507|Insufficient Storage|The maximum storage quota has been reached.
    |509|Bandwidth Limit Exceeded|Your app has been throttled for exceeding the maximum bandwidth cap. Your app can retry the request again after more time has elapsed.
    The error response is a single JSON object that contains a single property
    named **error**. This object includes all the details of the error. You can use the information returned here instead of or in addition to the HTTP status code. The following is an example of a full JSON error body.
    
    ```json
    {
      "error": {
        "code": "invalidRange",
        "message": "Uploaded fragment overlaps with existing data.",
        "innerError": {
          "requestId": "request-id",
          "date": "date-time"
        }
      }
    }
    ```
    
resource:
  heading: JSON representation
  intro: |
    The error resource is composed of these resources:
  sampleCode: |
    ```json
    {
      "error": { "@odata.type": "odata.error" }  
    }
    ```
    
  outro: |
    #### odata.error resource type
    Inside the error response is an error resource that includes the following
    properties:
    
    ```json
    {
      "code": "string",
      "message": "string",
      "innererror": { "@odata.type": "odata.error" }
    }
    ```
    
    |Property name|Value|Description\
    |:-|:-|:-|
    |**code**|string|An error code string for the error that occured
    |**message**|string|A developer ready message about the error that occured. This should not be displayed to the user directly.
    |**innererror**|error object|Optional. Additional error objects that may be more specific than the top level error.
