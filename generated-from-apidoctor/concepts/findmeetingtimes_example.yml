### YamlMime:GraphOperation
uid: graph.findmeetingtimes_example
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/findmeetingtimes_example.md
summary:
  heading: "Find possible meeting times on the Outlook calendar"
  intro: |
    In a workplace or school, looking for a common time and place to meet often incurs overhead. Microsoft Graph applications can use 
    [findMeetingTimes](xref:graph.user_findmeetingtimes) to identify any possible meeting times that satisfy time, location, and other constraints.   
    The **findMeetingTimes** action lets you specify conditions such as the meeting date/time range, duration, optional or required attendees, and
    nature of the activity (**activityDomain**). The action takes into account the attendees' and organizer's normal work schedules and free/busy status, and suggests 
    times that are appropriate for the participants and type of activity. For instance, suggestions for a work-related activity always occur 
    during the work hours of the organizer and attendees, and suggestions where required attendees are available are ordered higher up in the suggested list.
    In Office 365, work hours and time zones are configurable per mailbox. The **findMeetingTimes** action handles time zone variations among the organizer 
    and attendees. By default, **findMeetingTimes** returns suggestions in UTC. You can use the following request header to have **findMeetingTimes** return suggestions 
    expressed in a specific time zone.
    Prefer: outlook.timezone="{time-zone-string}}"

    Especially useful for larger meetings, you can specify a percentage (**minimumAttendeePercentage**) for a quorum and have **findMeetingTimes** return suggestions 
    only if that minimum attendee availability is met.
    If **findMeetingTimes** cannot suggest any meeting times, it indicates a specific reason (**emptySuggestionsReason**), such as the organizer or a required attendee not available.
    Based on this value, you can better adjust the parameters and call **findMeetingTimes** again.
    
examples:
  - items:
    - Example:
        heading: "Example"
        intro: |
          The following example shows how to use **findMeetingTimes** to return possible times for 2 users to meet for a couple of hours, taking into 
          account the users' free/busy and work schedules, and the attendee being away for part of the time. Because there are only 2 users for this meeting, suggestions 
          require 100% attendance. The following shows the users' free/busy schedule.
        outro: |
          ### Organizer's calendar
          ![The organizer's work calendar for April 17-21 showing free-busy times](./images/findmeetingtimes_organizer_free_busy.jpg "The organizer's work calendar for April 17-21 showing free-busy times")
