### YamlMime:GraphOperation
uid: graph.ios_swift
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/ios_swift.md
summary:
  heading: "Get started with Microsoft Graph in a Swift iOS App"
  intro: |
    This article describes the tasks required to get an access token from the [Azure AD v2.0 endpoint](https://developer.microsoft.com/en-us/graph/docs/concepts/converged_auth) and call Microsoft Graph. It walks you through the code inside the [Office 365 Connect Sample for iOS (REST)](https://github.com/microsoftgraph/ios-swift-connect-rest-sample) to explain the main concepts that you implement in an app that uses Microsoft Graph. It describes how to access Microsoft Graph by using REST operations in an asynchronous **Promise chain** pattern.  Promises in the sample are implemented by using the [mxcl/PromiseKit 4.5.2](xref:graph.README) CocoaPod. 
    The sample was created using **XCode 9.2** and **Swift 3.2**.
    You can download the version of the app that you'll create from this GitHub repo:
    
    * [Office 365 Connect Sample for iOS Using the Microsoft Graph SDK](https://github.com/microsoftgraph/ios-swift-connect-rest-sample)
    
    The following image shows the app you'll create.
    ![Connect sample walk-through, shows connecting and sending a mail in the app](./images/iOSConnectWalkthrough.png)
    The workflow authenticates and authorizes the sample to access  Microsoft Graph resources, signs in with your work or personal account, and finally sends a mail to a recipient.
    **Don't feel like building an app?** Use the [Microsoft Graph quick start](https://developer.microsoft.com/en-us/graph/quick-start) to get up and running fast.
permissions:
  heading: "Prerequisites"
  intro: |
    To get started, you'll need: 
    
    * [Xcode](https://developer.apple.com/xcode/downloads/) from Apple
    * Installation of [CocoaPods](https://guides.cocoapods.org/using/using-cocoapods.html) as a dependency manager
    * Installation of [Carthage](https://github.com/Carthage/Carthage) to import and build the **MSAL** library.
    * Installation of the [PromiseKit 4.5.2](xref:graph.Installation) Cocoapod. 
    * A [Microsoft account](https://www.outlook.com/) or a [work or school account](https://docs.microsoft.com/en-us/office/developer-program/office-365-developer-program-faq#account-types)
    
  outro: |
    ## Register the app
    
    1. Sign into the [App Registration Portal](https://apps.dev.microsoft.com/) using either your personal or work or school account.
    1. Select **Add an app**.
    1. Enter a name for the app, and select **Create application**.
    1. The registration page displays, listing the properties of your app.
    1. Under **Platforms**, select **Add platform**.
    1. Select **Native platform**.
    1. Copy the Client Id to the clipboard. You'll need to enter this value into the sample app.
    1. The app id is a unique identifier for your app. 
    1. Select **Save**.
    
