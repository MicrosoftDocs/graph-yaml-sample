### YamlMime:GraphOperation
uid: graph.nodejs
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/nodejs.md
summary:
  heading: Get started with Microsoft Graph in a Node.js app
  intro: |
    This article describes the tasks required to get an access token from the Azure AD v2.0 endpoint and call Microsoft Graph. It walks you through building the [Microsoft Connect sample for Node.js](https://github.com/microsoftgraph/nodejs-connect-rest-sample) and explains the main concepts that you implement to use Microsoft Graph. The article describes how to access the Microsoft Graph API by using raw REST calls. If you're interested in building a Node.js app that connects to Microsoft Graph with the JavaScript SDK, see our [Microsoft Graph SDK-based Node.js Connect sample](https://github.com/microsoftgraph/nodejs-connect-sample).
    The following image shows is the app you'll create. 
    ![The web app after login showing the "Send mail" button](./images/web-screenshot.png)
    **Don't feel like building an app?** Use the [Microsoft Graph quick start](https://graph.microsoft.io/en-us/getting-started) to get up and running fast.
    To download a version of the Connect sample that uses the Azure AD endpoint, see [Microsoft Graph Connect Sample for Node.js](https://github.com/microsoftgraph/nodejs-connect-rest-sample/releases/tag/last_v1_auth).
permissions:
  heading: Prerequisites
  intro: |
    To get started, you'll need: 
    
    * A [Microsoft account](https://www.outlook.com/) or a [work or school account](https://docs.microsoft.com/en-us/office/developer-program/office-365-developer-program-faq#account-types)
    * [Node.js with npm](https://nodejs.org/en/download/) 
    * The [Microsoft Connect sample for Node.js](https://github.com/microsoftgraph/nodejs-connect-rest-sample). You'll use the **starter-project** folder in the sample files for this walkthrough.
    
  outro: |
    ## Register the application
    Register an app on the Microsoft App Registration Portal. This generates the app ID and password that you'll use to configure the app in Visual Studio.
    
    1. Sign into the [Microsoft App Registration Portal](https://apps.dev.microsoft.com/) using either your personal or work or school account.
    1. Choose **Add an app**.
    1. Enter a name for the app, and choose **Create application**. 
    1. The registration page displays, listing the properties of your app.
    1. Copy the application ID. This is the unique identifier for your app. 
    1. Under **Application Secrets**, choose **Generate New Password**. Copy the password from the **New password generated** dialog.
    1. You'll use the application ID and application password (secret) to configure the app. 
    1. Under **Platforms**, choose **Add platform** > **Web**.
    1. Enter *http://localhost:3000/token* as the Redirect URI. 
    1. Choose **Save**.
    
