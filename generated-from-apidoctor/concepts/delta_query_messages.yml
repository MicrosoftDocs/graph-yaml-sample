### YamlMime:GraphOperation
uid: graph.delta_query_messages
metadata:
  content_git_url: https://github.com/microsoftgraph/microsoft-graph-docs/blob/master/concepts/delta_query_messages.md
summary:
  heading: "Get incremental changes to messages in a folder"
  intro: |
    Delta query lets you query for additions, deletions, or updates to messages in a folder, by way of a series of
    [delta](xref:graph.message_delta) function calls. Delta data enables you to maintain
    and synchronize a local store of a user's messages,
    without having to fetch the entire set of the user's messages from the server every time.
    Delta query supports both full synchronization that retrieves all of the messages in a folder (for example, the user's Inbox),
    and incremental synchronization that retrieves all of the messages that have changed in that folder since
    the last synchronization. Typically, you would do an initial full synchronization of all the messages in a folder, and
    subsequently, get incremental changes to that folder periodically.
  outro: |
    ## Track message changes in a folder
    Delta query is a per-folder operation. To track the changes of the messages in a folder hierarchy, you need to track each folder individually.
    Tracking message changes in a mail folder typically is a round of one or more GET requests with the **delta** function. The initial GET
    request is very much like the way you [get messages](https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_messages),
    except that you include the **delta** function:
    GET https://graph.microsoft.com/v1.0/me/mailFolders/{id}/messages/delta

    A GET request with the **delta** function returns either:
    
    * A `nextLink` (that contains a URL with a **delta** function call and a _skipToken_), or
    * A `deltaLink` (that contains a URL with a **delta** function call and _deltaToken_).
    
    These tokens are [state tokens](xref:graph.delta_query_overview#state-tokens) that are completely opaque to the client.
    To proceed with a round of change tracking, simply copy and apply the URL returned from the last GET
    request to the next **delta** function call for the same folder. A `deltaLink` returned in a response
    signifies that the current round of change tracking is complete. You can save and use the `deltaLink` URL
    when you begin the next round.
    See the [example](#example-to-synchronize-messages-in-a-folder) below to learn how to use the `nextLink` and
    `deltaLink` URLs.
